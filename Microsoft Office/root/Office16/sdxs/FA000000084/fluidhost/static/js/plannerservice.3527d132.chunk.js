"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[63874],{94266:(e,t,n)=>{n.d(t,{R:()=>r});var s=n(45078);class r{appendSharepointAuthenticationChallengeHeaders(e){return e[s.Er.AuthenticationChallengeHeaderName]=s.Er.AuthenticationChallengeHeaderValue,e}getDefaultRequestTelemetryConfig(e){return{apiName:this.name,methodName:e,requestHeadersToLog:this.loggableRequestHeaders,responseHeadersToLog:this.loggableResponseHeaders}}extractSkipTokenFromNextLink(e){try{const t=new URL(e);return new URLSearchParams(t.search).get(this.skipTokenParam)}catch{return null}}constructor(e,t,n){this.name=e,this.hostDomain=t,this.ajaxClient=n,this.skipTokenKey="@odata.nextLink",this.skipTokenParam="$skiptoken",this.vBetaUrlToken="beta",this.v1UrlToken="v1.0",this.loggableRequestHeaders=[s.a8.ClientRequestId],this.loggableResponseHeaders=[s.Qu.RequestId,s.Qu.ClientRequestId,s.Qu.TCorrelationId]}}},10882:(e,t,n)=>{n.r(t),n.d(t,{PlannerService:()=>l});var s=n(45078),r=n(95783),a=n(45277),o=n(94266),i=n(81704);class l extends o.R{async addUserToPlannerRosterMembersAsync(e){const t="".concat(this.hostDomain,"/").concat(this.vBetaUrlToken,"/planner/rosters/").concat(e.plannerRosterId,"/members"),n={"@odata.type":a.U.PlannerRosterMember,userId:e.userId};await this.ajaxClient.executeRequest(t,{method:r.PJ.Post,telemetryConfig:this.getDefaultRequestTelemetryConfig("addUserToPlannerRosterMembersAsync"),body:JSON.stringify(n),headers:{[s.Lr.ContentType]:s.Mq.Json},retryConfig:(0,i.Vj)({maxRetryCount:0})})}async removeUserFromPlannerRosterMembersAsync(e){const t="".concat(this.hostDomain,"/").concat(this.vBetaUrlToken,"/planner/rosters/").concat(e.plannerRosterId,"/members/").concat(e.userId);await this.ajaxClient.executeRequest(t,{method:r.PJ.Delete,telemetryConfig:this.getDefaultRequestTelemetryConfig("removeUserFromPlannerRosterMembersAsync"),retryConfig:(0,i.Vj)({maxRetryCount:0})})}constructor(e,t){super("PlannerService",e,t)}}},81704:(e,t,n)=>{n.d(t,{Vj:()=>l});var s=n(95783),r=n(34677),a=n.n(r),o=n(38752),i=n(98502);function l(e){return a()({maxRetryCount:o.B.clientSettings.RetrySettings.MaxRetryCount,maxRetryTimeoutInMiliseconds:o.B.clientSettings.RetrySettings.MaxRetryTimeout,delayOnRetryInMiliseconds:o.B.clientSettings.RetrySettings.RetryDelay,retryCheck:c},e)}async function c(e,t,n){return(null==e.method||e.method.toUpperCase()===s.PJ.Get)&&i.g.isRetryableResponse(t,n)}}}]);
//# sourceMappingURL=plannerservice.3527d132.chunk.js.map