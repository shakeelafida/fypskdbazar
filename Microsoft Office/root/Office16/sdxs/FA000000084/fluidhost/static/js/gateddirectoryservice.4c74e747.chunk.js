"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[10720],{43649:(e,t,r)=>{r.d(t,{b:()=>o});var s=r(38921),i=r(68552);class n extends i.K{extractNewEntityId(e){throw new s.v("extractNewEntityId should not be called for DeleteRequest")}constructor(e,t,r,s,n){super(e,t,r,s,i.Y.Delete,n)}}class o extends n{updateRequestParams(e,t){}constructor(e,t,r,s,i){super(e,t,r,s,i)}}},39287:(e,t,r)=>{r.d(t,{k:()=>n});var s=r(38921),i=r(68552);class n extends i.K{extractNewEntityId(e){throw new s.v("extractNewEntityId should not be called for PlannerReadRequest")}updateRequestParams(e,t){}constructor(e,t,r,s,n){super(e,t,r,s,i.Y.Update,n)}}},87596:(e,t,r)=>{r.d(t,{x:()=>i});var s=r(31956);class i extends s.z{updateRequestParams(e,t){}constructor(e,t,r,s,i){super(e,t,r,s,i)}}},31956:(e,t,r)=>{r.d(t,{z:()=>n});var s=r(38921),i=r(68552);class n extends i.K{extractNewEntityId(e){throw new s.v("extractNewEntityId should not be called for UpdateRequest")}constructor(e,t,r,s,n){super(e,t,r,s,i.Y.Update,n)}}},19377:(e,t,r)=>{r.d(t,{E:()=>n});var s=r(19853),i=r.n(s);class n{duplicateRequestsComparator(e,t){return!(e.entityId!==t.entityId||e.requestType!==t.requestType||!i()(e.requestParams,t.requestParams))}duplicateRequestHandler(e,t){return e.duplicateRequests.push(t.primaryRequest),null!=t.viewIds&&null!=e.viewIds?e.viewIds.push(...t.viewIds):e.viewIds=void 0,e}constructor(e,t){this.service=e,this.requestPrioritizer=t}}},46009:(e,t,r)=>{r.r(t),r.d(t,{GatedDirectoryService:()=>u});var s=r(19377),i=r(39287),n=r(87596),o=r(43649),c=r(18113);class u extends s.E{getGroupAsync(e,t,r,s){const n=null==s?c.Q.Priority5:s;return new Promise(((s,o)=>{const c=new i.k("GET_GROUP-".concat(e.groupId),this.service.getGroupAsync.bind(this.service),e,{resolve:s,reject:o},[]);this.requestPrioritizer.handleRequest(c,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getGroupPhotoAsync(e,t,r,s){const n=null==s?c.Q.Priority10:s;return new Promise(((s,o)=>{const c=new i.k("GET_GROUP_PHOTO-".concat(e.groupId),this.service.getGroupPhotoAsync.bind(this.service),e,{resolve:s,reject:o},[]);this.requestPrioritizer.handleRequest(c,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getMembersOfGroupAsync(e,t,r,s){const n=null==s?c.Q.Priority5:s;return new Promise(((s,o)=>{const c=new i.k("GET_GROUP_MEMBERS-".concat(e.groupId),this.service.getMembersOfGroupAsync.bind(this.service),e,{resolve:s,reject:o},[]);this.requestPrioritizer.handleRequest(c,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}checkMemberGroupsForCurrentUserAsync(e,t,r,s){const n=null==s?c.Q.Priority5:s;return new Promise(((s,o)=>{const c=new i.k("CHECK_USER_GROUP_MEMBERSHIPS",this.service.checkMemberGroupsForCurrentUserAsync.bind(this.service),e,{resolve:s,reject:o},[]);this.requestPrioritizer.handleRequest(c,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getUserAsync(e,t,r,s){const n=null==s?c.Q.Priority5:s;return new Promise(((s,o)=>{const c=new i.k("GET_USER-".concat(e.userId),this.service.getUserAsync.bind(this.service),e,{resolve:s,reject:o},[]);this.requestPrioritizer.handleRequest(c,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getUserPhotoAsync(e,t,r,s){const n=null==s?c.Q.Priority10:s;return new Promise(((s,o)=>{const c=new i.k("GET_USER_PHOTO-".concat(e.userId),this.service.getUserPhotoAsync.bind(this.service),e,{resolve:s,reject:o},[]);this.requestPrioritizer.handleRequest(c,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getUserLicensesAsync(e,t,r,s){const n=null==s?c.Q.Priority5:s;return new Promise(((s,o)=>{const c=new i.k("GET_USER_LICENSES-".concat(e.userId),this.service.getUserLicensesAsync.bind(this.service),e,{resolve:s,reject:o},[]);this.requestPrioritizer.handleRequest(c,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getJoinedGroupsAsync(e,t,r,s){const n=null==s?c.Q.Priority5:s;return new Promise(((s,o)=>{const c=new i.k("GET_JOINED_GROUPS",this.service.getJoinedGroupsAsync.bind(this.service),e,{resolve:s,reject:o},[]);this.requestPrioritizer.handleRequest(c,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}addMemberToGroupAsync(e,t){const r=null==t?c.Q.Priority1:t;return new Promise(((t,s)=>{const i=new n.x("ADD_MEMBER_TO_GROUP-".concat(e.groupId,"-").concat(e.userId),this.service.addMemberToGroupAsync.bind(this.service),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(i,r)}))}removeMemberFromGroupAsync(e,t){const r=null==t?c.Q.Priority1:t;return new Promise(((t,s)=>{const i=new n.x("REMOVE_MEMBER_FROM_GROUP-".concat(e.groupId,"-").concat(e.userId),this.service.removeMemberFromGroupAsync.bind(this.service),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(i,r)}))}deleteGroupAsync(e,t){const r=null==t?c.Q.Priority1:t;return new Promise(((t,s)=>{const i=new o.b("DELETE_GROUP-".concat(e.groupId),this.service.deleteGroupAsync.bind(this.service),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(i,r)}))}}}}]);
//# sourceMappingURL=gateddirectoryservice.4c74e747.chunk.js.map