"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[80819],{36591:(e,t,i)=>{i.d(t,{C:()=>o});class o{constructor(e,t,i,o,a){this.dispatcher=e,this.logicModuleProviders=t,this.entityStoreSet=i,this.clientSettings=o,this.loggers=a}}},64553:(e,t,i)=>{i.r(t),i.d(t,{DialogActionCreator:()=>T});var o=i(38752),a=i(49226),s=i(72438),n=i(36591),r=i(96891),l=i(97498),c=i(62687),p=i(40468),d=i(21382),h=i(74844),g=i(86053),u=i(82841);class T extends n.C{get name(){return r.M.DialogActionCreator}close(){this.dispatcher.dispatchAction(new a.u(this.entityStoreSet.appContextStore.getCurrentDialogData()))}openAssigneeLimitErrorDialog(e){var t,i;const a=e?this.entityStoreSet.taskStore.getTask(e):null,s=null!==a&&void 0!==a&&a.planId?this.entityStoreSet.planStore.getPlan(a.planId):null,n=null!==a&&void 0!==a&&a.planId?this.entityStoreSet.planStore.getPlanDetails(a.planId):null;this.loggers.usageLogger.logData(r.M.ErrorDialog,"MaxAssigneeLimit",{taskId:null!==(t=null===a||void 0===a?void 0:a.id)&&void 0!==t?t:"newTask",planId:null!==(i=null===s||void 0===s?void 0:s.id)&&void 0!==i?i:"",displayAs:null!=s&&null!=n?p.T.getFirstDisplayableContextString(s,n):""});const l=d.G(g.p.Strings.TaskAssignmentControl_AssignTooManyErrorMessage,o.B.clientSettings.MaxTaskAssignees.toString());this.openErrorDialog(g.p.Strings.TaskAssignmentControl_AssignErrorHeader,l)}openCopyPlan(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.CopyPlan,sourcePlanId:e}))}openMobileAppLink(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.MobileAppLink}))}openNewPlan(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.CreatePlan}))}openTeamSettingsDialog(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.TeamSettings}))}openNotificationSettings(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.NotificationSettings}))}openTaskDetails(e,t,i){var o,a;const n=null!==(o=null===(a=this.entityStoreSet.taskStore.getTask(e))||void 0===a?void 0:a.taskCreationSourceType)&&void 0!==o?o:null;this.dispatcher.dispatchAction(new s.o({dialogType:l.h.TaskDetails,taskAccessContext:t,taskId:e,taskCreationSource:n,onDismiss:i,additionalLoggingData:()=>{var e;return null!==(e=n&&{taskCreationSource:String(n)})&&void 0!==e?e:{}}}))}openTaskAttachmentDetails(e,t,i){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.TaskAttachmentDetails,taskId:e,attachment:t,elementToFocusOnDismiss:i}))}openPlanSettingsPanel(e,t){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.EditPlan,planId:e,elementToFocusOnDismiss:t}))}openLeavePlanDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.LeavePlan,planId:e}))}openPlanResolutionWaiterDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.ResolvePlanSpinner,planId:e}))}openInfoDialog(e,t,i,o){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.Info,headerText:e,message:t,buttonText:i,onButtonClick:o}))}openErrorDialog(e,t,i){this.loggers.usageLogger.logData(r.M.ErrorDialog,r.M.ErrorBarShown),this.dispatcher.dispatchAction(new s.o({dialogType:l.h.Error,errorHeader:e,errorMessage:t,correlationId:i}))}openFormsIframeDialog(e,t,i,o,a){this.loggers.usageLogger.logData(r.M.FormsRequirementsIframeDialog,r.M.FormsRequirementsIframeDialogOpened),this.dispatcher.dispatchAction(new s.o({dialogType:l.h.FormsIframe,formId:e,urlFormId:t,taskId:i,onDismiss:o,isOpenFromFormResponseView:a}))}openCopyTaskDialog(e,t){var i,o;this.dispatcher.dispatchAction(new s.o({dialogType:l.h.CopyTask,taskId:e,taskCreationSource:null!==(i=null===(o=this.entityStoreSet.taskStore.getTask(e))||void 0===o?void 0:o.taskCreationSourceType)&&void 0!==i?i:null,onDismiss:t}))}openMoveTaskDialog(e,t){var i,o;this.dispatcher.dispatchAction(new s.o({dialogType:l.h.MoveTask,taskId:e,taskCreationSource:null!==(i=null===(o=this.entityStoreSet.taskStore.getTask(e))||void 0===o?void 0:o.taskCreationSourceType)&&void 0!==i?i:null,onDismiss:t}))}openDeleteRecurringTaskDialog(e,t){var i,o;this.dispatcher.dispatchAction(new s.o({dialogType:l.h.DeleteRecurringTask,taskId:e,taskCreationSource:null!==(i=null===(o=this.entityStoreSet.taskStore.getTask(e))||void 0===o?void 0:o.taskCreationSourceType)&&void 0!==i?i:null,onDismiss:t}))}openOnboardingCarouselDialog(e,t){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.OnboardingCarousel,isAlternate:e,onDismiss:t}))}openPublishTasksToCalenderDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.ICalendar,planId:e}))}async openTaskDetailsDialogFromDeepLink(e){let t;const i=e.indexOf("#");if(i>0){const s=e.substring(i+1);if(s.length>0)try{const e=JSON.parse(s);if(e.notificationType&&e.channel&&e.createdTimeTicks)try{const t=await this.logicModuleProviders.telemetryModule();try{await t.logNotificationTelemetry(e)}catch(o){}}catch(o){}else this.loggers.traceLogger.logTrace(507888157,h.k.Warning,"DialogActionCreator - openTaskDetailsDialogFromDeepLink_incorrectJson [json=".concat(s,"]"))}catch(a){this.loggers.traceLogger.logTrace(507888156,h.k.Warning,"DialogActionCreator - openTaskDetailsDialogFromDeepLink_exception [json=".concat(s,"]").concat((0,u.LB)(a)))}t=e.substring(0,i)}else t=e;this.openTaskDetails(t,c.t.Plan,(e=>{}))}openToastManagerDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.ToastManager,onDismiss:e}))}openTryProjectDialog(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.TryProjectDialog}))}openRequestProjectLicenseDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.RequestProjectLicenseDialog,projectSkuId:e}))}openTeamsAboutDialog(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.TeamsAbout}))}openSharePlanDialog(e,t){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.SharePlan,planId:e,userIds:t}))}openMobileWelcomeDialog(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.MobileWelcomeDialog}))}openRequestPremiumLicenseDialog(){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.RequestPremiumLicense}))}openRemovePlanFromPinnedAndRecentsDialog(e){this.dispatcher.dispatchAction(new s.o({dialogType:l.h.RemovePlanFromPinnedAndRecents,planId:e}))}constructor(e,t,i,a){super(e,t,i,o.B.clientSettings,a)}}}}]);
//# sourceMappingURL=dialogac.120945cb.chunk.js.map