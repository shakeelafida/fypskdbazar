"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[25914],{64805:(e,t,n)=>{n.d(t,{J:()=>r});class a{get clientSettings(){return this.clientSettingsProvider()}constructor(e,t,n){this.dispatcher=e,this.clientSettingsProvider=t,this.loggers=n}}class r extends a{getCurrentViewIds(){const e=this.stores.appContextStore.getCurrentViewId();return e?[e]:void 0}constructor(e,t,n,a,r){super(e,a,r),this.webApiProviders=t,this.stores=n}}},38509:(e,t,n)=>{n.r(t),n.d(t,{PlanModule:()=>Q});var a=n(53211),r=n(71794),s=n(7574),i=n(54205),o=n(99244),l=n(62076),c=n(51710),g=n(93593),d=n(73615),u=n(89190),h=n(35879),p=n(28242),P=n(75992);class v extends P.r{loggingData(){return{sourcePlanId:this.originalPlanId,ownerId:this.targetContainerId}}constructor(e,t,n){super(v.actionType),this.originalPlanId=e,this.newPlanTitle=t,this.targetContainerId=n}}v.actionType="PLW_COPY_PLAN";var T=n(31415),y=n(32512);class w extends y.v{loggingData(){return{...super.loggingData(),sourcePlanId:this.originalPlanId,clientOperationId:this.clientOperationId}}constructor(e,t,n,a,r){super(w.actionType,n,a,r),this.originalPlanId=e,this.clientOperationId=t}}w.actionType="PLW_COPY_PLAN_FAILED";var I=n(75913),C=n(93407),b=n(14070),S=n(24367),m=n(23835),k=n(24322),D=n(40468),x=n(51857),A=n(78332),F=n(96891),f=n(74844),R=n(95783),L=n(64226),E=n(64805),U=n(9962),V=n(91246),W=n(69108),j=n.n(W),O=n(19853),N=n.n(O),M=n(28673),q=n.n(M),B=n(30035),_=n(98502),H=n(54439),Y=n(82841);class Q extends E.J{get name(){return"PlanModule"}async fetchPlanAsync(e,t,n){this.loggers.traceLogger.logTrace(507897117,f.k.Verbose,"Fetching Plan [PlanId=".concat(e,"][Force=").concat(null!==t&&void 0!==t&&t,"]"));const i=this.stores.planStore.getPlan(e),o=this.stores.planStore.getPlanDetails(e);if(!t&&null!=i&&null!=o)return Promise.resolve(D.T.builder.withPlan(i).withDetails(o).build());let l=e=>{const t=this.stores.planStore.getPlan(e.planId),n=this.stores.planStore.getPlanDetails(e.planId);return null==t||null==n?null:D.T.builder.withPlan(t).withDetails(n).build()},c=this.getCurrentViewIds();t&&(l=void 0,c=void 0),this.dispatcher.dispatchAction(new a.Q(e));try{const a=await this.webApiProviders.taskService(),s=await a.getPlanEntitySetAsync({planId:e},l,c,n);return this.loggers.traceLogger.logTrace(507897116,f.k.Verbose,"Fetching Plan - Success [PlanId=".concat(e,"][Force=").concat(null!==t&&void 0!==t&&t,"][ContainerType=").concat(s.plan.container.containerType,"]")),this.dispatcher.dispatchAction(new r.$(s)),s}catch(p){var g,d,u,h;const n=p;return this.loggers.traceLogger.logTrace(507897115,f.k.Warning,"Fetching Plan - Fail [PlanId=".concat(e,"][Force=").concat(null!==t&&void 0!==t&&t,"]").concat((0,Y.s8)(n))),this.dispatcher.dispatchAction(new s.j(n.response,null!==(g=null===(d=n.response)||void 0===d?void 0:d.statusText)&&void 0!==g?g:"",null!==(u=null===(h=n.error)||void 0===h?void 0:h.message)&&void 0!==u?u:"",e)),Promise.reject(n)}}async fetchPlanByExternalIdAsync(e,t,n,a){this.loggers.traceLogger.logTrace(507897114,f.k.Verbose,"Fetching Plan By External Id [Force=".concat(null!==n&&void 0!==n&&n,"]"));const i=this.stores.planStore.getPlanByExternalId(e,t),o=i?this.stores.planStore.getPlanDetails(i.id):null;if(!n&&null!=i&&null!=o)return Promise.resolve(D.T.builder.withPlan(i).withDetails(o).build());let l=e=>{const t=this.stores.planStore.getPlanByExternalId(e.contextScenarioId,e.externalObjectId),n=t?this.stores.planStore.getPlanDetails(t.id):null;return null==t||null==n?null:D.T.builder.withPlan(t).withDetails(n).build()},c=this.getCurrentViewIds();n&&(l=void 0,c=void 0);try{const s=await this.webApiProviders.taskService(),i=await s.getPlanEntitySetByExternalIdAsync({contextScenarioId:e,externalObjectId:t},l,c,a);return this.loggers.traceLogger.logTrace(507897113,f.k.Verbose,"Fetching Plan By External Id - Success [Force=".concat(null!==n&&void 0!==n&&n,"][ContainerType=").concat(i.plan.container.containerType,"]")),this.dispatcher.dispatchAction(new r.$(i)),i}catch(p){var g,d,u,h;const e=p;return this.loggers.traceLogger.logTrace(507897112,f.k.Warning,"Fetching Plan By External Id - Fail [Force=".concat(null!==n&&void 0!==n&&n,"]").concat((0,Y.s8)(e))),this.dispatcher.dispatchAction(new s.j(e.response,null!==(g=null===(d=e.response)||void 0===d?void 0:d.statusText)&&void 0!==g?g:"",null!==(u=null===(h=e.error)||void 0===h?void 0:h.message)&&void 0!==u?u:"")),Promise.reject(e)}}async fetchUserRosterPlansAsync(){this.loggers.traceLogger.logTrace(507897111,f.k.Verbose,"Fetching User Roster Plans");try{const e=await this.fetchRosterPlansRecursive([]);return this.loggers.traceLogger.logTrace(507897110,f.k.Verbose,"Fetching User Roster Plans - Success"),e}catch(e){const t=e;return this.loggers.traceLogger.logTrace(507897109,f.k.Warning,"Fetching User Roster Plans - Failure ".concat((0,Y.s8)(t))),Promise.reject(t)}}async fetchFavoritePlansAsync(){try{const e=await this.fetchFavoritePlansRecursive([]);return this.loggers.traceLogger.logTrace(507897108,f.k.Verbose,"Fetching Favorite Plans - Success"),e}catch(e){const t=e;return this.loggers.traceLogger.logTrace(507897107,f.k.Warning,"Fetching Favorite Plans - Fail ".concat((0,Y.s8)(t))),Promise.reject(t)}}async fetchRecentPlansAsync(){try{const e=await this.fetchRecentPlansRecursive([]);return this.loggers.traceLogger.logTrace(507897106,f.k.Verbose,"Fetching Recent Plans - Success"),e}catch(e){const t=e;return this.loggers.traceLogger.logTrace(507897105,f.k.Warning,"Fetching Recent Plans - Fail ".concat((0,Y.s8)(t))),Promise.reject(t)}}async createPlanAsync(e,t,n){this.loggers.traceLogger.logTrace(507897104,f.k.Verbose,"Creating Plan [ContainerId=".concat(e.plan.container.externalId,"]")),n?H.j.beginTransaction(this.dispatcher,{name:"createPlan",transactionId:n,action:new i.O(e)},this.loggers.logHandler):this.dispatcher.dispatchAction(new i.O(e));try{const a=await this.tryCreatePlan(e,t);return this.loggers.traceLogger.logTrace(507897103,f.k.Verbose,"Creating Plan - Success [ContainerId=".concat(e.plan.container.externalId,"]")),n?H.j.completeTransaction(this.dispatcher,{transactionId:n,action:new o.t(a,e.plan.id),additionalData:{planId:a.plan.id}}):this.dispatcher.dispatchAction(new o.t(a,e.plan.id)),this.loggers.usageLogger.logData(this.name,F.M.CreatePlan),a}catch(p){const t=p;var a,r,s,c,g,d,u,h;if(this.loggers.traceLogger.logTrace(507897102,f.k.Warning,"Creating Plan - Fail [ContainerId=".concat(e.plan.container.externalId,"]").concat((0,Y.s8)(t))),n)H.j.completeTransactionWithError(this.dispatcher,{transactionId:n,errorMessage:"",action:new l.V(e,t.response,null!==(a=null===(r=t.response)||void 0===r?void 0:r.statusText)&&void 0!==a?a:"",null!==(s=null===(c=t.error)||void 0===c?void 0:c.message)&&void 0!==s?s:""),additionalData:null!=t.response?{statusCode:t.response.status}:void 0});else this.dispatcher.dispatchAction(new l.V(e,t.response,null!==(g=null===(d=t.response)||void 0===d?void 0:d.statusText)&&void 0!==g?g:"",null!==(u=null===(h=t.error)||void 0===h?void 0:h.message)&&void 0!==u?u:""));return Promise.reject(t)}}async deletePlanAsync(e,t,n){var a,r;this.loggers.traceLogger.logTrace(507897101,f.k.Verbose,"Deleting Plan [PlanId=".concat(e,"][Version=").concat(t,"]"));const s=e+"_deletePlan",i=null!==(a=null===(r=this.stores.planStore.getPlan(e))||void 0===r?void 0:r.title)&&void 0!==a?a:"";H.j.beginTransaction(this.dispatcher,{name:"deletePlan",transactionId:s,action:new c.H(e)},this.loggers.logHandler);try{const a=await this.webApiProviders.taskService();return await a.deletePlanAsync({planId:e,itemVersion:t}),H.j.completeTransaction(this.dispatcher,{transactionId:s,action:new g.Y(e,n)}),this.loggers.traceLogger.logTrace(507897100,f.k.Verbose,"Deleting Plan - Success [PlanId=".concat(e,"][Version=").concat(t,"]")),this.loggers.usageLogger.logData(F.M.PlanActionCreator,F.M.DeleteWebPlan),Promise.resolve()}catch(p){var o,l,u,h;const n=p;return H.j.completeTransactionWithError(this.dispatcher,{transactionId:s,errorMessage:"",action:new d.U(e,n.response,null!==(o=null===(l=n.response)||void 0===l?void 0:l.statusText)&&void 0!==o?o:"",null!==(u=null===(h=n.error)||void 0===h?void 0:h.message)&&void 0!==u?u:"")}),this.dispatcher.dispatchAction(new S.Z(new x.Q("SharedComponents_DeletePlanToastTitle",this.stores.appContextStore.getFlights().ShowHiddenToasts,[],i))),this.loggers.traceLogger.logTrace(507897099,f.k.Warning,"Deleting Plan - Failure [PlanId=".concat(e,"][Version=").concat(t,"]").concat((0,Y.s8)(p))),Promise.reject(n)}}async updatePlanAsync(e,t,n){this.loggers.traceLogger.logTrace(507897098,f.k.Verbose,"Updating Plan [PlanId=".concat(e.id,"]"));const a=V.o.generate(),r=e.id+A.Ek.UpdatePlan;if(H.j.beginTransaction(this.dispatcher,{name:"updatePlan",transactionId:r},this.loggers.logHandler),N()(e,t))return H.j.completeTransaction(this.dispatcher,{transactionId:r,action:new u.F(e,a)}),Promise.resolve(e);const s=e.plan.getDiff(t.plan),i=null!=e.planDetails&&null!=t.planDetails?e.planDetails.getDiff(t.planDetails):null;this.dispatcher.dispatchAction(new h.U(t,a));const o=t=>{const n=this.stores.planStore.getPlanWithoutPendingUpdates(t.originalPlanEntitySet.id);if(null==n)throw this.loggers.traceLogger.logTrace(507897097,f.k.Warning,"Updating Plan - Fail [PlanId=".concat(e.id,'][Error="Original plan not found in store"]')),_.g.generateAjaxClientError(null,new U.m("originalStorePlan","planStore"));const a=n.applyDiffs(s||{});let r=t.originalPlanEntitySet.planDetails,o=t.updatedPlanEntitySet.planDetails;if(null!=r&&null!=o){if(r=this.stores.planStore.getPlanDetailsWithoutPendingUpdates(t.originalPlanEntitySet.id)||void 0,null==r)throw this.loggers.traceLogger.logTrace(507897096,f.k.Warning,"Updating Plan - Fail [PlanId=".concat(e.id,'][Error="Original planDetails not found in store"]')),_.g.generateAjaxClientError(null,new U.m("originalStoreDetails","planStore"));o=r.applyDiffs(i||{})}return{originalPlanEntitySet:D.T.builder.withPlan(n).withDetails(r).build(),updatedPlanEntitySet:D.T.builder.withPlan(a).withDetails(o).build()}};try{const s=await this.webApiProviders.taskService(),i=await s.updatePlanAsync({originalPlanEntitySet:e,updatedPlanEntitySet:t},o,n);return H.j.completeTransaction(this.dispatcher,{transactionId:r,action:new u.F(i,a)}),this.loggers.traceLogger.logTrace(507897095,f.k.Verbose,"Updating Plan - Success [PlanId=".concat(e.id,"]")),this.loggers.usageLogger.logData(this.name,F.M.UpdatePlan),i}catch(P){var l,c,g,d;const t=P,n=new p.R(e,a,t.response,null!==(l=null===(c=t.response)||void 0===c?void 0:c.statusText)&&void 0!==l?l:"",null!==(g=null===(d=t.error)||void 0===d?void 0:d.message)&&void 0!==g?g:"");return H.j.completeTransactionWithError(this.dispatcher,{transactionId:r,errorMessage:"",action:n}),this.loggers.traceLogger.logTrace(507897094,f.k.Warning,"Updating Plan - Fail [PlanId=".concat(e.id,"]").concat((0,Y.s8)(t))),Promise.reject(t)}}async copyPlanAsync(e,t,n,a,r,s,i){this.loggers.traceLogger.logTrace(507897093,f.k.Verbose,"Copying Plan [PlanId=".concat(e,"][ContainerId=").concat(n,"][ClientOperationId=").concat(a,"]")),this.dispatcher.dispatchAction(new v(e,t,n));try{const s=await this.webApiProviders.taskService(),i=await s.copyPlanAsync({planId:e,newTitle:t,targetGroupId:n,clientOperationId:a,copyPlanOptions:r});return this.dispatcher.dispatchAction(new T.c(i,n,a)),this.loggers.traceLogger.logTrace(507897092,f.k.Verbose,"Copying Plan - Success [PlanId=".concat(e,"][ContainerId=").concat(n,"][ClientOperationId=").concat(a,"][ServiceOperationId=").concat(i,"]")),i}catch(u){var o;const h=u,p=433===(null===h||void 0===h||null===(o=h.response)||void 0===o?void 0:o.status);return i&&null!=s&&Date.now()-s<Q.RetryCreateTimeout&&!p?(await(0,B.y)(Q.RetryCreateInterval),this.copyPlanAsync(e,t,n,a,r,s,i)):(this.dispatcher.dispatchAction(new w(e,a,h.response,null!==(l=null===(c=h.response)||void 0===c?void 0:c.statusText)&&void 0!==l?l:"",null!==(g=null===(d=h.error)||void 0===d?void 0:d.message)&&void 0!==g?g:"")),this.loggers.traceLogger.logTrace(507897091,f.k.Warning,"Copying Plan - Fail [PlanId=".concat(e,"][ContainerId=").concat(n,"][ClientOperationId=").concat(a,"]").concat((0,Y.s8)(h))),Promise.reject(h));var l,c,g,d}}async subscribeUserToPlanAsync(e,t){this.loggers.traceLogger.logTrace(507897090,f.k.Verbose,"Subscribing user to plan [PlanId=".concat(t,"]"));try{const o=await this.fetchPlanAsync(t,!1),l=o.planDetails;if(j()(l.sharedWith,e)>=0)return o;const c=l.addUserToSharedWith(e,!1),g=D.T.builder.withPlan(o.plan).withDetails(c).build();try{const e=await this.updatePlanAsync(o,g);return this.loggers.traceLogger.logTrace(507897089,f.k.Verbose,"SubscribeCurrentUserToPlan - Success"),e}catch(s){var n,a;const t=s,g=null!==(n=433===(null===t||void 0===t||null===(a=t.response)||void 0===a?void 0:a.status))&&void 0!==n&&n;if(this.loggers.traceLogger.logTrace(507897088,f.k.Verbose,"SubscribeCurrentUserToPlan - Retry [IsLimitsError=".concat(g,"][Size=").concat(c.sharedWith.length,"]")),!(c.sharedWith.length>1&&g))return this.loggers.traceLogger.logTrace(507897057,f.k.Warning,"SubscribeCurrentUserToPlan - Non limit related update failure ".concat((0,Y.s8)(t))),Promise.reject(t);{const t=l.addUserToSharedWith(e,!0),n=D.T.builder.withPlan(o.plan).withDetails(t).build();try{const e=await this.updatePlanAsync(o,n);return this.loggers.traceLogger.logTrace(507897059,f.k.Verbose,"SubscribeCurrentUserToPlan - Success"),e}catch(i){var r;return(null===i||void 0===i||null===(r=i.response)||void 0===r||null===(r=r.statusText)||void 0===r?void 0:r.indexOf("MaximumProjectsSharedWithUser"))>-1&&this.dispatcher.dispatchAction(new m.i(L.fc.DiffSyncMaxPlansSharedWithUserLimitError)),this.loggers.traceLogger.logTrace(507897058,f.k.Warning,"SubscribeCurrentUserToPlan - Retry Fail ".concat((0,Y.s8)(i))),Promise.reject(i)}}}}catch(s){const e=s;return this.loggers.traceLogger.logTrace(507897056,f.k.Warning,"SubscribeCurrentUserToPlan - Failed to retrieve plan ".concat((0,Y.s8)(e))),Promise.reject(e)}}async fetchRecommendedDocumentPlansAsync(){this.loggers.traceLogger.logTrace(507897055,f.k.Verbose,"Fetch Recommended Document Plans");try{const e=await this.fetchRecommendedDocumentPlansRecursive([]);return this.loggers.traceLogger.logTrace(507897054,f.k.Verbose,"Fetch Recommended Document Plans - Success"),e}catch(e){const t=e;return this.loggers.traceLogger.logTrace(507897053,f.k.Warning,"Fetch Recommended Document Plans - Fail ".concat((0,Y.s8)(t))),Promise.reject(t)}}async fetchRecommendedDocumentPlansRecursive(e,t){const n=this.stores.appContextStore.getCurrentUserId();try{const a=await this.webApiProviders.taskService(),r=await a.getRecommendedDocumentPlansForUserAsync({userId:n,nextContinuationToken:t});return e.push(...r.data.Results),this.dispatcher.dispatchAction(new I.C(n,r.data.Results,null!=r.data.NextContinuationToken)),null!=r.data.NextContinuationToken?this.fetchRecommendedDocumentPlansRecursive(e,r.data.NextContinuationToken):e}catch(a){return Promise.reject(a)}}async fetchFavoritePlansRecursive(e,t){const n=this.stores.appContextStore.getCurrentUserId(),a=this.stores.userStore.getCurrentUserDetails(),r=await this.webApiProviders.taskService(),s=await r.getFavoritePlansForUserAsync({userId:n,nextContinuationToken:t},(e=>{if(e.nextContinuationToken)return null;const t=q()(a.favoritePlans.references),n=[];for(let a=0;a<t.length;a++){const e=t[a],r=this.stores.planStore.getPlan(e);if(null==r)return null;n.push(D.T.builder.withPlan(r).build())}return{data:{Results:n,NextContinuationToken:null},statusCode:R.t3.OK,xCorrelationId:null}}));return e.push(...s.data.Results),this.dispatcher.dispatchAction(new C.A(n,s.data.Results,null!=s.data.NextContinuationToken)),null!=s.data.NextContinuationToken?this.fetchFavoritePlansRecursive(e,s.data.NextContinuationToken):e}async fetchRosterPlansRecursive(e,t){const n=await this.webApiProviders.taskService(),a=await n.getUserRosterPlansAsync({nextContinuationToken:t});return e.push(...a.Results),this.dispatcher.dispatchAction(new k.T(a.Results,null!=a.NextContinuationToken)),null!=a.NextContinuationToken?this.fetchRosterPlansRecursive(e,a.NextContinuationToken):e}async fetchRecentPlansRecursive(e,t){const n=this.stores.appContextStore.getCurrentUserId(),a=this.stores.userStore.getCurrentUserDetails(),r=await this.webApiProviders.taskService(),s=await r.getRecentPlansForUserAsync({userId:n,nextContinuationToken:t},(e=>{if(e.nextContinuationToken)return null;const t=q()(a.recentPlans.references),n=[];for(let a=0;a<t.length;a++){const e=t[a],r=this.stores.planStore.getPlan(e);if(null==r)return null;n.push(D.T.builder.withPlan(r).build())}return{data:{Results:n,NextContinuationToken:null},statusCode:R.t3.OK,xCorrelationId:null}}));return e.push(...s.data.Results),this.dispatcher.dispatchAction(new b.N(n,s.data.Results,null!=s.data.NextContinuationToken)),null!=s.data.NextContinuationToken?this.fetchRecentPlansRecursive(e,s.data.NextContinuationToken):e}async tryCreatePlan(e,t,n){this.loggers.traceLogger.logTrace(507897052,f.k.Verbose,"Try Creating Plan [ContainerId=".concat(e.plan.container.externalId,"][ShouldRetry=").concat(t,"]"));const a=null!==n&&void 0!==n?n:Date.now();try{const t=await this.webApiProviders.taskService(),n=await t.createPlanAsync({newPlanEntitySet:e});return this.loggers.traceLogger.logTrace(507897051,f.k.Verbose,"Try Creating Plan - Success [ContainerId=".concat(e.plan.container.externalId,"]")),n}catch(r){const n=r;return t&&Date.now()-a<Q.RetryCreateTimeout?(this.loggers.traceLogger.logTrace(507897050,f.k.Info,"Try Creating Plan - Fail, Retrying [ContainerId=".concat(e.plan.container.externalId,"]").concat((0,Y.s8)(n))),await(0,B.y)(Q.RetryCreateInterval),this.tryCreatePlan(e,t,a)):(this.loggers.traceLogger.logTrace(507897049,f.k.Warning,"Creating Plan - Fail [ContainerId=".concat(e.plan.container.externalId,"]").concat((0,Y.s8)(n))),Promise.reject(n))}}}Q.RetryCreateTimeout=6e4,Q.RetryCreateInterval=1e3},30035:(e,t,n)=>{async function a(e){return new Promise((t=>setTimeout(t,e)))}n.d(t,{y:()=>a})},54439:(e,t,n)=>{n.d(t,{j:()=>c});var a=n(29274),r=n(74427),s=n(57860),i=n(47204),o=n(74568),l=n(79947);class c{static beginTransaction(e,t,n){let{transactionId:r,name:s,logQos:i,action:l,additionalData:g}=t;if(!0===i){const e=new o.W({name:"Tx:"+s},n);c.qosEventsInFlight[r]=e}e.batchDispatchActions(new a.S(s,r,g),l)}static cancelTransaction(e,t){let{transactionId:n,action:a,additionalData:s}=t;const i=c.qosEventsInFlight[n];i&&(i.end({resultType:l.f.ExpectedFailure,extraData:s}),delete c.qosEventsInFlight[n]),e.batchDispatchActions(a,new r.D(n,s))}static completeTransaction(e,t){let{transactionId:n,action:a,additionalData:r}=t;const i=c.qosEventsInFlight[n];i&&(i.end({resultType:l.f.Success,extraData:r}),delete c.qosEventsInFlight[n]),e.batchDispatchActions(a,new s.M(n,r))}static completeTransactionWithBatch(e,t){let{transactionId:n,actions:a,additionalData:r}=t;const i=c.qosEventsInFlight[n];i&&(i.end({resultType:l.f.Success,extraData:r}),delete c.qosEventsInFlight[n]),e.batchDispatchActions(...a,new s.M(n,r))}static completeTransactionWithError(e,t){let{transactionId:n,errorMessage:a,action:r,additionalData:s}=t;const o=c.qosEventsInFlight[n];o&&(o.end({resultType:l.f.Failure,error:a,extraData:s}),delete c.qosEventsInFlight[n]),e.batchDispatchActions(r,new i.Y(n,a,s))}}c.qosEventsInFlight={}}}]);
//# sourceMappingURL=planmodule.fdb40f81.chunk.js.map