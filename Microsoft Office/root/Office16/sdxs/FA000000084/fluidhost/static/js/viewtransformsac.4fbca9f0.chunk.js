"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[3367],{36591:(t,e,i)=>{i.d(e,{C:()=>n});class n{constructor(t,e,i,n,s){this.dispatcher=t,this.logicModuleProviders=e,this.entityStoreSet=i,this.clientSettings=n,this.loggers=s}}},27549:(t,e,i)=>{i.r(e),i.d(e,{ViewTransformsActionCreator:()=>u});var n=i(38752),s=i(77910),o=i(55694),r=i(80837),a=i(65980),h=i(36591),l=i(53988),c=i(96891);class u extends h.C{get name(){return c.M.ViewTransformsActionCreator}setTaskGroupingState(t,e){this.dispatcher.dispatchAction(new o.p(t,e,this.entityStoreSet.appContextStore.getCurrentPage()))}async setTaskFilter(t,e,i,n,o){if(i&&0!==e.filterCount)throw new l.c("isClearFilters","FilterCount cannot be 0 if isClearFilters");const r=[],h=this.entityStoreSet.walkthroughStore.getCurrentWalkthroughStepIndex();null!==h&&r.push(new a.u(this.entityStoreSet.walkthroughStore.getCurrentWalkthroughType(),h));const c=await this.logicModuleProviders.notificationModule();i?c.enqueueHiddenToastNotification("SharedComponents_ClearFiltersTitle"):void 0!==n&&0!==(null===o||void 0===o?void 0:o.length)&&c.enqueueHiddenToastNotification(n?"SharedComponents_AnnouncementWhenFiltersRemoved":"SharedComponents_AnnouncementWhenFiltersApplied",o),r.push(new s.O(t,e)),this.dispatcher.batchDispatchActions(...r)}setCategoryLabelMode(t,e,i){this.dispatcher.dispatchAction(new r._(t,e,i))}constructor(t,e,i,s){super(t,e,i,n.B.clientSettings,s)}}}}]);
//# sourceMappingURL=viewtransformsac.4fbca9f0.chunk.js.map