"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[91955],{39287:(e,t,s)=>{s.d(t,{k:()=>n});var i=s(38921),r=s(68552);class n extends r.K{extractNewEntityId(e){throw new i.v("extractNewEntityId should not be called for PlannerReadRequest")}updateRequestParams(e,t){}constructor(e,t,s,i,n){super(e,t,s,i,r.Y.Update,n)}}},19377:(e,t,s)=>{s.d(t,{E:()=>n});var i=s(19853),r=s.n(i);class n{duplicateRequestsComparator(e,t){return!(e.entityId!==t.entityId||e.requestType!==t.requestType||!r()(e.requestParams,t.requestParams))}duplicateRequestHandler(e,t){return e.duplicateRequests.push(t.primaryRequest),null!=t.viewIds&&null!=e.viewIds?e.viewIds.push(...t.viewIds):e.viewIds=void 0,e}constructor(e,t){this.service=e,this.requestPrioritizer=t}}},98927:(e,t,s)=>{s.r(t),s.d(t,{GatedTenantService:()=>u});var i=s(19377),r=s(39287),n=s(18113);class u extends i.E{getSensitivityLabelsAsync(e,t){const s=null==t?n.Q.Priority1:t;return new Promise(((e,t)=>{const i=new r.k("GET_SENSITIVITY_LABELS",this.service.getSensitivityLabelsAsync.bind(this.service),void 0,{resolve:e,reject:t},[]);this.requestPrioritizer.handleRequest(i,s,this.duplicateRequestsComparator,this.duplicateRequestHandler)}))}getSensitivityPolicySettingsAsync(e,t){const s=null==t?n.Q.Priority1:t;return new Promise(((e,t)=>{const i=new r.k("GET_SENSITIVITY_POLICY_SETTINGS",this.service.getSensitivityPolicySettingsAsync.bind(this.service),void 0,{resolve:e,reject:t},[]);this.requestPrioritizer.handleRequest(i,s,this.duplicateRequestsComparator,this.duplicateRequestHandler)}))}getTenantGroupSettingsAsync(e,t){const s=null==t?n.Q.Priority1:t;return new Promise(((e,t)=>{const i=new r.k("GET_TENANT_GROUP_SETTINGS",this.service.getTenantGroupSettingsAsync.bind(this.service),void 0,{resolve:e,reject:t},[]);this.requestPrioritizer.handleRequest(i,s,this.duplicateRequestsComparator,this.duplicateRequestHandler)}))}}}}]);
//# sourceMappingURL=gatedtenantservice.5dc0f71a.chunk.js.map