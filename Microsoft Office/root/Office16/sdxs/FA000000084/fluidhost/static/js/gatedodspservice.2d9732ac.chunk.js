"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[99171],{88636:(e,t,s)=>{s.d(t,{E:()=>n});var r=s(68552);class i extends r.K{constructor(e,t,s,i,n){super(e,t,s,i,r.Y.Create,n)}}class n extends i{extractNewEntityId(e){return""}updateRequestParams(e,t){}constructor(e,t,s,r,i){super(e,t,s,r,i)}}},43649:(e,t,s)=>{s.d(t,{b:()=>c});var r=s(38921),i=s(68552);class n extends i.K{extractNewEntityId(e){throw new r.v("extractNewEntityId should not be called for DeleteRequest")}constructor(e,t,s,r,n){super(e,t,s,r,i.Y.Delete,n)}}class c extends n{updateRequestParams(e,t){}constructor(e,t,s,r,i){super(e,t,s,r,i)}}},39287:(e,t,s)=>{s.d(t,{k:()=>n});var r=s(38921),i=s(68552);class n extends i.K{extractNewEntityId(e){throw new r.v("extractNewEntityId should not be called for PlannerReadRequest")}updateRequestParams(e,t){}constructor(e,t,s,r,n){super(e,t,s,r,i.Y.Update,n)}}},87596:(e,t,s)=>{s.d(t,{x:()=>i});var r=s(31956);class i extends r.z{updateRequestParams(e,t){}constructor(e,t,s,r,i){super(e,t,s,r,i)}}},31956:(e,t,s)=>{s.d(t,{z:()=>n});var r=s(38921),i=s(68552);class n extends i.K{extractNewEntityId(e){throw new r.v("extractNewEntityId should not be called for UpdateRequest")}constructor(e,t,s,r,n){super(e,t,s,r,i.Y.Update,n)}}},19377:(e,t,s)=>{s.d(t,{E:()=>n});var r=s(19853),i=s.n(r);class n{duplicateRequestsComparator(e,t){return!(e.entityId!==t.entityId||e.requestType!==t.requestType||!i()(e.requestParams,t.requestParams))}duplicateRequestHandler(e,t){return e.duplicateRequests.push(t.primaryRequest),null!=t.viewIds&&null!=e.viewIds?e.viewIds.push(...t.viewIds):e.viewIds=void 0,e}constructor(e,t){this.service=e,this.requestPrioritizer=t}}},1471:(e,t,s)=>{s.r(t),s.d(t,{GatedOdspService:()=>u});var r=s(19377),i=s(88636),n=s(39287),c=s(87596),o=s(18113),a=s(43649);class u extends r.E{getDriveItemAsync(e,t,s,r){const i=null==r?o.Q.Priority5:r;return new Promise(((r,c)=>{const o=new n.k("GET_DRIVE_ITEM-".concat(e.driveId,"-").concat(e.itemId),this.service.getDriveItemAsync.bind(this.service),e,{resolve:r,reject:c},[]);this.requestPrioritizer.handleRequest(o,i,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,s)}))}getDriveItemThumbnailAsync(e,t,s,r){const i=null==r?o.Q.Priority5:r;return new Promise(((r,c)=>{const o=new n.k("GET_DRIVE_ITEM_THUMBNAIL-".concat(e.groupId,"-").concat(e.itemPath),this.service.getDriveItemThumbnailAsync.bind(this.service),e,{resolve:r,reject:c},[]);this.requestPrioritizer.handleRequest(o,i,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,s)}))}getDocumentsInGroupFolderAsync(e,t,s,r){const i=null==r?o.Q.Priority5:r;return new Promise(((r,c)=>{var o;const a=new n.k("GET_DOCUMENTS_IN_GROUP_FOLDER-".concat(e.groupId,"-").concat(e.folderId,"-").concat(null!==(o=e.skipToken)&&void 0!==o?o:""),this.service.getDocumentsInGroupFolderAsync.bind(this.service),e,{resolve:r,reject:c},[]);this.requestPrioritizer.handleRequest(a,i,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,s)}))}createUploadSessionAsync(e,t){const s=null==t?o.Q.Priority1:t;return new Promise(((t,r)=>{const n=new i.E("CREATE_UPLOAD_SESSION-".concat(e.groupId,"-").concat(e.itemPath),this.service.createUploadSessionAsync.bind(this.service),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(n,s)}))}uploadBytesToSessionAsync(e,t){const s=null==t?o.Q.Priority1:t;return new Promise(((t,r)=>{const i=new c.x("UPLOAD_BYTES_TO_SESSION-".concat(e.uploadSession.id),this.service.uploadBytesToSessionAsync.bind(this.service),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(i,s)}))}cancelUploadSessionAsync(e,t){const s=null==t?o.Q.Priority1:t;return new Promise(((t,r)=>{const i=new a.b("CANCEL_UPLOAD_SESSION-".concat(e.session.id),this.service.cancelUploadSessionAsync.bind(this.service),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(i,s)}))}shareDriveItemAsync(e,t){const s=null==t?o.Q.Priority5:t;return new Promise(((t,r)=>{const i=new n.k("SHARE_DRIVE_ITEM-".concat(e.driveId,"-").concat(e.itemId),this.service.shareDriveItemAsync.bind(this.service),e,{resolve:t,reject:r},[]);this.requestPrioritizer.handleRequest(i,s)}))}}}}]);
//# sourceMappingURL=gatedodspservice.2d9732ac.chunk.js.map