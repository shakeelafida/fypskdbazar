"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[44874],{841:(e,t,r)=>{r.r(t),r.d(t,{GatedGraphApi:()=>h});var s=r(18113),i=r(39287),n=r(31956);class o extends n.z{updateRequestParams(e,t){}constructor(e,t,r,s,i){super(e,t,r,s,i)}}var a=r(19853),u=r.n(a);class h{getUnifiedGroupAsync(e,t,r,n){const o=null==n?s.Q.Priority5:n;return new Promise(((s,n)=>{const a=new i.k("GET_UNIFIED_GROUP"+e.groupId,this.graphApi.getUnifiedGroupAsync.bind(this.graphApi),e,{resolve:s,reject:n},[]);this.requestPrioritizer.handleRequest(a,o,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getMembersOfContainerAsync(e,t,r,n){const o=null==n?s.Q.Priority5:n;return new Promise(((s,n)=>{const a=new i.k("GET_CONTAINER_MEMBERS"+e.container.externalId,this.graphApi.getMembersOfContainerAsync.bind(this.graphApi),e,{resolve:s,reject:n},[]);this.requestPrioritizer.handleRequest(a,o,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getMembersOfGroupAsync(e,t,r,n){const o=null==n?s.Q.Priority5:n;return new Promise(((s,n)=>{const a=new i.k("GET_GROUP_MEMBERS"+e.container.externalId,this.graphApi.getMembersOfGroupAsync.bind(this.graphApi),e,{resolve:s,reject:n},[]);this.requestPrioritizer.handleRequest(a,o,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getConversationThreadAsync(e,t,r,n){const o=null==n?s.Q.Priority5:n;return new Promise(((s,n)=>{const a=new i.k("GET_CONVO_THREAD"+e.threadId,this.graphApi.getConversationThreadAsync.bind(this.graphApi),e,{resolve:s,reject:n},[]);this.requestPrioritizer.handleRequest(a,o,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getUserAsync(e,t,r,n){const o=null==n?s.Q.Priority5:n;return new Promise(((s,n)=>{const a=new i.k("GET_USER"+e.userId,this.graphApi.getUserAsync.bind(this.graphApi),e,{resolve:s,reject:n},[]);this.requestPrioritizer.handleRequest(a,o,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}resolveUsersAsync(e,t,r,n){const o=null==n?s.Q.Priority5:n;return new Promise(((s,n)=>{const a=new i.k("RESOLVE_USERS",this.graphApi.resolveUsersAsync.bind(this.graphApi),e,{resolve:s,reject:n},[]);this.requestPrioritizer.handleRequest(a,o,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getUserPhoto(e,t,r,n){const o=null==n?s.Q.Priority10:n;return new Promise(((s,n)=>{const a=new i.k("GET_USER_PHOTO"+e.user.id,this.graphApi.getUserPhoto.bind(this.graphApi),e,{resolve:s,reject:n},[]);this.requestPrioritizer.handleRequest(a,o,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}getGroupPhoto(e,t,r){const n=null==r?s.Q.Priority10:r;return new Promise(((r,s)=>{const o=new i.k("GET_GROUP_PHOTO"+e.groupId,this.graphApi.getGroupPhoto.bind(this.graphApi),e,{resolve:r,reject:s},[]);this.requestPrioritizer.handleRequest(o,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t)}))}getDriveItem(e){const t=s.Q.Priority5;return new Promise(((r,s)=>{const n=new i.k("GET_DRIVE_ITEM"+e.driveId+e.itemId,this.graphApi.getDriveItem.bind(this.graphApi),e,{resolve:r,reject:s},[]);this.requestPrioritizer.handleRequest(n,t,this.duplicateRequestsComparator,this.duplicateRequestHandler)}))}getGroupDocumentsInFolderPaged(e,t,r){const n=null==r?s.Q.Priority5:r;return new Promise(((r,s)=>{var o;const a=new i.k(null!==(o="GET_GROUP_DOCS_IN_FOLDER_PAGED"+e.groupId+e.folderId+e.skipToken)&&void 0!==o?o:"",this.graphApi.getGroupDocumentsInFolderPaged.bind(this.graphApi),e,{resolve:r,reject:s},[]);this.requestPrioritizer.handleRequest(a,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,void 0,t)}))}getDriveItemThumbnail(e,t,r,i){const n=null==i?s.Q.Priority5:i;return new Promise(((s,i)=>{const a="GET_DRIVE_THUMBNAIL"+e.groupId+e.itemPath,u=new o(a,this.graphApi.getDriveItemThumbnail.bind(this.graphApi),e,{resolve:s,reject:i},[]);this.requestPrioritizer.handleRequest(u,n,this.duplicateRequestsComparator,this.duplicateRequestHandler,t,r)}))}checkCurrentUserToGroupsMembershipsAsync(e,t){const r=null==t?s.Q.Priority5:t;return new Promise(((t,s)=>{const n=new i.k("CHECK_USER_GROUP_MEMBERSHIPS",this.graphApi.checkCurrentUserToGroupsMembershipsAsync.bind(this.graphApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(n,r,this.duplicateRequestsComparator,this.duplicateRequestHandler)}))}shareDriveItemAsync(e,t){const r=null==t?s.Q.Priority5:t;return new Promise(((t,s)=>{const n=new i.k("SHARE_DRIVE_ITEM"+e.driveId+e.itemId,this.graphApi.shareDriveItemAsync.bind(this.graphApi),e,{resolve:t,reject:s},[]);this.requestPrioritizer.handleRequest(n,r,this.duplicateRequestsComparator,this.duplicateRequestHandler)}))}constructor(e,t){this.graphApi=e,this.requestPrioritizer=t,this.duplicateRequestsComparator=(e,t)=>!(e.entityId!==t.entityId||e.requestType!==t.requestType||!u()(e.requestParams,t.requestParams)),this.duplicateRequestHandler=(e,t)=>(e.duplicateRequests.push(t.primaryRequest),null!=t.viewIds&&null!=e.viewIds?e.viewIds.push(...t.viewIds):e.viewIds=void 0,e)}}},39287:(e,t,r)=>{r.d(t,{k:()=>n});var s=r(38921),i=r(68552);class n extends i.K{extractNewEntityId(e){throw new s.v("extractNewEntityId should not be called for PlannerReadRequest")}updateRequestParams(e,t){}constructor(e,t,r,s,n){super(e,t,r,s,i.Y.Update,n)}}},31956:(e,t,r)=>{r.d(t,{z:()=>n});var s=r(38921),i=r(68552);class n extends i.K{extractNewEntityId(e){throw new s.v("extractNewEntityId should not be called for UpdateRequest")}constructor(e,t,r,s,n){super(e,t,r,s,i.Y.Update,n)}}}}]);
//# sourceMappingURL=gatedgraphapi.52f351a2.chunk.js.map