"use strict";(self.webpackChunkfluidhost=self.webpackChunkfluidhost||[]).push([[46075],{36591:(t,e,i)=>{i.d(e,{C:()=>s});class s{constructor(t,e,i,s,a){this.dispatcher=t,this.logicModuleProviders=e,this.entityStoreSet=i,this.clientSettings=s,this.loggers=a}}},47701:(t,e,i)=>{i.r(e),i.d(e,{DiffSyncActionCreator:()=>U});var s=i(48148),a=i(45698),c=i(47572),n=i(98899),d=i(42045),r=i(79387),h=i(98304),p=i(91393),l=i(41927),o=i(33629),y=i(99763),u=i(43841),f=i(34631),w=i(2423),A=i(13736),D=i(36591),k=i(38752),S=i(96891),g=i(74844),v=i(82841);class U extends D.C{get name(){return S.M.DiffSyncActionCreator}async fetchDiffSyncToken(){(await this.logicModuleProviders.diffSyncModule()).fetchDiffSyncToken().catch((()=>{}))}async fetchDiffSyncFeed(t){(await this.logicModuleProviders.diffSyncModule()).fetchDiffSyncFeed(t).catch((()=>{}))}applyInsertBucket(t){this.dispatcher.dispatchAction(new s.e(t))}applyDeleteBucket(t){this.dispatcher.dispatchAction(new a.a(t))}applyUpdateBucket(t){this.dispatcher.dispatchAction(new c.c(t))}async applyDeletePlan(t){if(null==t.deletedBy)return void this.dispatcher.dispatchAction(new n.l(t.id,t.container));const e=await this.logicModuleProviders.userModule();e.fetchUserAsync(t.deletedBy).then((e=>{this.dispatcher.dispatchAction(new n.l(t.id,t.container,e.displayName))}),(e=>{this.dispatcher.dispatchAction(new n.l(t.id,t.container))}));const i=this.entityStoreSet.userStore.getUserDetailsById(k.B.currentUserId);if(null==i)return;let s=i;null!=i.favoritePlans.references[t.id]&&(s=s.removeFavoritePlan(t.id)),null!=i.recentPlans.references[t.id]&&(s=s.removeRecentPlan(t.id)),e.updateUserDetailsAsync(i,s).catch((t=>{this.loggers.traceLogger.logTrace(507880209,g.k.Warning,"ApplyDeletePlan Update User Details - Failure ".concat((0,v.s8)(t)))}))}applyUpdatePlan(t){this.dispatcher.dispatchAction(new d.Z(t))}applyUpdatePlanDetails(t){this.dispatcher.dispatchAction(new r.T(t))}applyInsertTask(t){const e=this.entityStoreSet.planStore.getContainerIdForPlan(t.task.planId);this.dispatcher.dispatchAction(new h.r(t,e))}applyInsertTaskDetails(t){this.dispatcher.dispatchAction(new p.p(t))}applyInsertTaskFormatData(t){this.dispatcher.dispatchAction(new l.F(t))}async applyDeleteTask(t){var e;if(null==(null===(e=t.task)||void 0===e?void 0:e.deletedBy))return void this.dispatcher.dispatchAction(new o.D(t));(await this.logicModuleProviders.userModule()).fetchUserAsync(t.task.deletedBy).then((e=>{this.dispatcher.dispatchAction(new o.D(t,e.displayName))}),(e=>{this.dispatcher.dispatchAction(new o.D(t))}))}applyUpdateTask(t,e){this.dispatcher.dispatchAction(new y.T(t,e))}applyUpdateTaskDetails(t,e){this.dispatcher.dispatchAction(new u.V(t,e))}applyUpdateTaskFormatData(t,e){this.dispatcher.dispatchAction(new f.V(t,e))}applyUpdateUserDetails(t){this.dispatcher.dispatchAction(new w.z(t))}scheduleDiffSyncFetch(){this.dispatcher.dispatchAction(new A.K)}constructor(t,e,i,s){super(t,e,i,k.B.clientSettings,s)}}}}]);
//# sourceMappingURL=diffsyncac.91c8703f.chunk.js.map